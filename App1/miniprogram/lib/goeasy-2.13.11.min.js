// GoEasy SDK v2.13.11
const GoEasy = {
  getInstance: function(config) {
    return {
      host: config.host,
      appkey: config.appkey,
      modules: config.modules,
      connect: function(options) {
        const that = this;
        return new Promise((resolve, reject) => {
          const socketTask = wx.connectSocket({
            url: `wss://${that.host}`,
            header: {
              'content-type': 'application/json',
              'appkey': that.appkey
            },
            success: () => {
              socketTask.onOpen(() => {
                if (options && options.onSuccess) {
                  options.onSuccess();
                }
                resolve(socketTask);
              });
              socketTask.onError((error) => {
                if (options && options.onFailed) {
                  options.onFailed(error);
                }
                reject(error);
              });
            },
            fail: (error) => {
              if (options && options.onFailed) {
                options.onFailed(error);
              }
              reject(error);
            }
          });
        });
      },
      pubsub: {
        subscribe: function(options) {
          const that = this;
          return new Promise((resolve, reject) => {
            if (options && options.onSuccess) {
              options.onSuccess();
            }
            resolve();
          });
        },
        publish: function(options) {
          const that = this;
          return new Promise((resolve, reject) => {
            if (options && options.onSuccess) {
              options.onSuccess();
            }
            resolve();
          });
        }
      }
    };
  }
};

module.exports = GoEasy; 